/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/app.js":
/*!************************!*\
  !*** ./dist/js/app.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ngsap.registerPlugin(ScrollTrigger, ScrollSmoother);\r\n\r\nlet smoother = ScrollSmoother.create({\r\n  smooth: 2,\r\n  effects: true,\r\n  normalizeScroll: true\r\n});\r\n\r\nsmoother.effects(\".about-production, .about-production *\", { speed: 1, lag: 0 });\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n  let header = document.querySelector(\"header\");\r\n  let link = document.querySelector(\".header__burger\");\r\n  let menu = document.querySelector(\".header__nav\");\r\n\r\n  if (menu) {\r\n    link.addEventListener(\"click\", function () {\r\n      link.classList.toggle(\"active\");\r\n      menu.classList.toggle(\"open\");\r\n    });\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (menu.classList.contains(\"open\")) {\r\n        link.classList.remove(\"active\");\r\n        menu.classList.remove(\"open\");\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n      let target = e.target;\r\n      if (\r\n        !target.closest(\".header__nav\") &&\r\n        !target.closest(\".header__burger\") &&\r\n        !target.closest(\".button-dropdown\")\r\n      ) {\r\n        link.classList.remove(\"active\");\r\n        menu.classList.remove(\"open\");\r\n        closeAllDropdowns();\r\n      }\r\n    });\r\n\r\n    const dropdownToggles = document.querySelectorAll(\".dropdown-toggle\");\r\n\r\n    // Десктоп: hover\r\n    if (window.innerWidth > 1024) {\r\n      dropdownToggles.forEach(toggle => {\r\n        const parent = toggle.closest(\".button-dropdown\");\r\n\r\n        parent.addEventListener(\"mouseenter\", () => {\r\n          closeAllDropdowns();\r\n          parent.classList.add(\"open\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          dropdown.style.maxHeight = dropdown.scrollHeight + \"px\";\r\n        });\r\n\r\n        parent.addEventListener(\"mouseleave\", () => {\r\n          parent.classList.remove(\"open\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          dropdown.style.maxHeight = null;\r\n        });\r\n      });\r\n    }\r\n\r\n    // Мобильный: click\r\n    else {\r\n      dropdownToggles.forEach(toggle => {\r\n        toggle.addEventListener(\"click\", function (e) {\r\n          e.preventDefault();\r\n          const parent = toggle.closest(\".button-dropdown\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          const height = dropdown.scrollHeight;\r\n\r\n          if (parent.classList.contains(\"open\")) {\r\n            parent.classList.remove(\"open\");\r\n            dropdown.style.maxHeight = null;\r\n          } else {\r\n            closeAllDropdowns();\r\n            dropdown.style.maxHeight = height + \"px\";\r\n            parent.classList.add(\"open\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function closeAllDropdowns() {\r\n      document.querySelectorAll(\".button-dropdown\").forEach(item => {\r\n        item.classList.remove(\"open\");\r\n        const menu = item.querySelector(\".dropdown-menu\");\r\n        if (menu) {\r\n          menu.style.maxHeight = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Grids\r\n\r\n  const grids = document.querySelectorAll('.category__grid');\r\n  const cards = document.querySelector('.category__cards');\r\n\r\n  grids.forEach(grid => {\r\n    grid.addEventListener('click', () => {\r\n      grids.forEach(g => g.classList.remove('active'));\r\n      grid.classList.add('active');\r\n\r\n      const gridType = grid.dataset.grid;\r\n      cards.classList.remove('grid-1', 'grid-2', 'grid-3');\r\n      cards.classList.add(`grid-${gridType}`);\r\n    });\r\n  });\r\n\r\n  // Swiper\r\n\r\n  const heroSwiper = new Swiper(\".heroSwiper\", {\r\n    pagination: {\r\n      el: \".hero-pagination\",\r\n    },\r\n  });\r\n\r\n  const compareSwiper = new Swiper(\".compareSwiper\", {\r\n    slidesPerView: 2,\r\n    spaceBetween: 0,\r\n    breakpoints: {\r\n      768: {\r\n        slidesPerView: 3,\r\n      },\r\n      1025: {\r\n        slidesPerView: 4,\r\n      },\r\n    }\r\n  });\r\n\r\n  const swiperNavProd = new Swiper('.js-prod-nav-slider', {\r\n    grabCursor: true,\r\n    lazy: true,\r\n    slidesPerView: 4,\r\n    spaceBetween: 8,\r\n    breakpoints: {\r\n      1025: {\r\n        direction: \"vertical\",\r\n        slidesPerView: 6,\r\n      }\r\n    }\r\n  });\r\n\r\n  const swiperProd = new Swiper('.js-prod-slider', {\r\n    grabCursor: true,\r\n    lazy: true,\r\n    spaceBetween: 8,\r\n    navigation: {\r\n      nextEl: \".prod-button-next\",\r\n      prevEl: \".prod-button-prev\",\r\n    },\r\n    thumbs: {\r\n      swiper: swiperNavProd,\r\n    },\r\n  });\r\n\r\n  // Accordion\r\n\r\n  const faqItems = document.querySelectorAll(\".faq__item\");\r\n\r\n  faqItems.forEach((el) => {\r\n    el.addEventListener(\"click\", function () {\r\n      this.classList.toggle(\"active\");\r\n      let accBody = this.querySelector(\".faq__content\");\r\n      if (accBody.style.maxHeight) {\r\n        accBody.style.maxHeight = null;\r\n      } else {\r\n        accBody.style.maxHeight = accBody.scrollHeight + \"px\";\r\n      }\r\n    });\r\n  });\r\n\r\n  // Tabs\r\n\r\n  var tabs = new Tabby('[data-tabs]');\r\n\r\n  // Sticky Box\r\n\r\n  function setupAboutProduction() {\r\n    const wrap = document.querySelector(\".about-production__wrap\");\r\n    const slot = document.querySelector(\".about-production__slot\");\r\n    const list = document.querySelector(\".about-production__list\");\r\n    if (!wrap || !slot || !list) return;\r\n\r\n    const slotH = slot.clientHeight;\r\n    const listH = list.scrollHeight; \r\n    const distance = Math.max(0, listH - slotH);\r\n\r\n    const peek = Math.round(Math.min(80, slotH * 0.18));\r\n\r\n    const startY = slotH - peek;\r\n    const endY   = -distance;\r\n\r\n    ScrollTrigger.getById(\"about-pin\")?.kill();\r\n    ScrollTrigger.create({\r\n      id: \"about-pin\",\r\n      trigger: wrap,\r\n      start: \"top top\",\r\n      end: () => \"+=\" + (distance + window.innerHeight * 0.4),\r\n      pin: true,\r\n      pinSpacing: true,\r\n      anticipatePin: 1,\r\n      invalidateOnRefresh: true\r\n    });\r\n\r\n    ScrollTrigger.getById(\"about-scroll\")?.kill();\r\n    gsap.fromTo(\r\n      list,\r\n      { y: startY, force3D: true },\r\n      {\r\n        y: endY,\r\n        force3D: true,\r\n        scrollTrigger: {\r\n          id: \"about-scroll\",\r\n          trigger: wrap,\r\n          start: \"top top\",\r\n          end: () => \"+=\" + distance,\r\n          scrub: true,  \r\n          invalidateOnRefresh: true\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  // setupAboutProduction();\r\n  window.addEventListener(\"resize\", () => ScrollTrigger.refresh());\r\n\r\n  // Modals\r\n\r\n  (function () {\r\n    const modalWrapper = document.querySelector('.modals');\r\n    if (!modalWrapper) return;\r\n\r\n    const modals = Array.from(modalWrapper.querySelectorAll('.modal'));\r\n    const body = document.body;\r\n\r\n    const getModalByType = (type) => modalWrapper.querySelector(`.modal[data-type=\"${type}\"]`);\r\n\r\n    const showWrapper = () => {\r\n      body.style.overflow = 'hidden';\r\n      modalWrapper.style.opacity = 1;\r\n      modalWrapper.style.pointerEvents = 'all';\r\n    };\r\n\r\n    const hideWrapper = () => {\r\n      body.style.overflow = '';\r\n      modalWrapper.style.opacity = 0;\r\n      modalWrapper.style.pointerEvents = 'none';\r\n    };\r\n\r\n    const openModal = (type) => {\r\n      // Скрыть все\r\n      modals.forEach(m => {\r\n        m.style.display = 'none';\r\n        m.style.removeProperty('transform');\r\n      });\r\n\r\n      const modal = getModalByType(type);\r\n      if (!modal) return;\r\n\r\n      modal.style.display = 'block';\r\n      showWrapper();\r\n\r\n      if (window.gsap) {\r\n        gsap.fromTo(modal, { y: '-100%' }, { y: '0%', duration: 0.5, ease: 'power3.out' });\r\n      }\r\n    };\r\n\r\n    const closeCurrentModal = () => {\r\n      const current = modals.find(m => m.style.display !== 'none');\r\n      const finishClose = () => {\r\n        if (current) current.style.display = 'none';\r\n        hideWrapper();\r\n      };\r\n\r\n      if (current && window.gsap) {\r\n        const type = current.dataset.type;\r\n        gsap.to(current, {\r\n          y: '-100%',\r\n          duration: 0.4,\r\n          ease: 'power3.in',\r\n          onComplete: () => {\r\n            current.style.removeProperty('transform');\r\n            finishClose();\r\n          }\r\n        });\r\n      } else {\r\n        finishClose();\r\n      }\r\n    };\r\n\r\n    document.querySelectorAll('.modal-btn').forEach(btn => {\r\n      btn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        const type = btn.dataset.type;\r\n        if (type) openModal(type);\r\n      });\r\n    });\r\n\r\n    modalWrapper.addEventListener('click', (e) => {\r\n      if (e.target === modalWrapper || e.target.closest('.modal__close')) {\r\n        closeCurrentModal();\r\n      }\r\n    });\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape' && modalWrapper.style.pointerEvents === 'all') {\r\n        closeCurrentModal();\r\n      }\r\n    });\r\n  })();\r\n});\r\n\n\n//# sourceURL=webpack://gulp-2022/./dist/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;