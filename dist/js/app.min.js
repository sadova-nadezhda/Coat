/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/app.js":
/*!************************!*\
  !*** ./dist/js/app.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ngsap.registerPlugin(ScrollTrigger, ScrollSmoother, ScrollToPlugin);\r\n\r\n// ---------- GSAP core ----------\r\nconst smoother = ScrollSmoother.create({\r\n  wrapper: '#smooth-wrapper',\r\n  content: '#smooth-content',\r\n  smooth: 2,\r\n  effects: true\r\n});\r\n\r\nconst header   = document.querySelector('header');\r\nconst wrap     = document.querySelector('.service__wrap');\r\nconst aside    = document.querySelector('.my-sticky');\r\nconst links    = gsap.utils.toArray('.service__aside a');\r\nconst sections = gsap.utils.toArray('.service__group');\r\n\r\nconst getHeaderH = () => (header ? header.offsetHeight : 0);\r\n\r\nif (wrap && aside) {\r\n  ScrollTrigger.matchMedia({\r\n    \"(min-width: 1025px)\": () => {\r\n      ScrollTrigger.create({\r\n        trigger: wrap,\r\n        start: () => `top+=${getHeaderH()} top+=${getHeaderH()}`,\r\n        end: () => {\r\n          const total   = wrap.scrollHeight;\r\n          const stickyH = aside.offsetHeight;\r\n          return `+=${Math.max(0, total - stickyH - 1)}`;\r\n        },\r\n        pin: aside,\r\n        pinSpacing: true,\r\n        invalidateOnRefresh: true,\r\n        anticipatePin: 1\r\n      });\r\n    },\r\n\r\n    \"(max-width: 1024px)\": () => {\r\n      // ничего не создаём\r\n    }\r\n  });\r\n}\r\n\r\nlinks.forEach(a => {\r\n  a.addEventListener('click', (e) => {\r\n    const hash = a.getAttribute('href');\r\n    if (!hash || hash[0] !== '#') return;\r\n    e.preventDefault();\r\n    const y = smoother.offset(hash, 'top top') - getHeaderH();\r\n    smoother.scrollTo(y, true);\r\n    history.pushState(null, '', hash);\r\n  });\r\n});\r\n\r\nlet currentId = null;\r\nconst setActive = (id) => {\r\n  if (currentId === id) return;\r\n  currentId = id;\r\n  links.forEach(l => l.classList.toggle('active', l.getAttribute('href') === `#${id}`));\r\n};\r\n\r\nsections.forEach(sec => {\r\n  ScrollTrigger.create({\r\n    trigger: sec,\r\n    start: () => `top+=${getHeaderH()} center`,\r\n    end: 'bottom center',\r\n    onEnter:     () => setActive(sec.id),\r\n    onEnterBack: () => setActive(sec.id),\r\n    fastScrollEnd: true,\r\n    invalidateOnRefresh: true\r\n  });\r\n});\r\n\r\nconst delayedRefresh = gsap.delayedCall(0.12, () => ScrollTrigger.refresh());\r\n\r\nwindow.addEventListener('load', () => {\r\n  if (location.hash) {\r\n    const y = smoother.offset(location.hash, 'top top') - getHeaderH();\r\n    smoother.scrollTo(y, false);\r\n    setActive(location.hash.slice(1));\r\n  }\r\n  delayedRefresh.restart(true);\r\n});\r\n\r\ndocument.addEventListener('tabby', () => delayedRefresh.restart(true), true);\r\n\r\ndocument.querySelectorAll('.faq__header').forEach(btn => {\r\n  btn.addEventListener('click', () => setTimeout(() => delayedRefresh.restart(true), 180));\r\n});\r\n\r\ndocument.querySelectorAll('.service__box img').forEach(img => {\r\n  if (!img.complete) {\r\n    img.addEventListener('load',  () => delayedRefresh.restart(true), { once:true });\r\n    img.addEventListener('error', () => delayedRefresh.restart(true), { once:true });\r\n  }\r\n});\r\n\r\nconst serviceBox = document.querySelector('.service__box');\r\nif (serviceBox && 'ResizeObserver' in window) {\r\n  new ResizeObserver(() => delayedRefresh.restart(true)).observe(serviceBox);\r\n}\r\n\r\nwindow.addEventListener('resize', () => delayedRefresh.restart(true));\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n  let link = document.querySelector(\".header__burger\");\r\n  let menu = document.querySelector(\".header__nav\");\r\n\r\n  if (menu) {\r\n    link.addEventListener(\"click\", function () {\r\n      link.classList.toggle(\"active\");\r\n      menu.classList.toggle(\"open\");\r\n    });\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (menu.classList.contains(\"open\")) {\r\n        link.classList.remove(\"active\");\r\n        menu.classList.remove(\"open\");\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n      let target = e.target;\r\n      if (\r\n        !target.closest(\".header__nav\") &&\r\n        !target.closest(\".header__burger\") &&\r\n        !target.closest(\".button-dropdown\")\r\n      ) {\r\n        link.classList.remove(\"active\");\r\n        menu.classList.remove(\"open\");\r\n        closeAllDropdowns();\r\n      }\r\n    });\r\n\r\n    const dropdownToggles = document.querySelectorAll(\".dropdown-toggle\");\r\n\r\n    if (window.innerWidth > 1024) {\r\n      dropdownToggles.forEach(toggle => {\r\n        const parent = toggle.closest(\".button-dropdown\");\r\n        parent.addEventListener(\"mouseenter\", () => {\r\n          closeAllDropdowns();\r\n          parent.classList.add(\"open\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          dropdown.style.maxHeight = dropdown.scrollHeight + \"px\";\r\n        });\r\n        parent.addEventListener(\"mouseleave\", () => {\r\n          parent.classList.remove(\"open\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          dropdown.style.maxHeight = null;\r\n        });\r\n      });\r\n    } else {\r\n      dropdownToggles.forEach(toggle => {\r\n        toggle.addEventListener(\"click\", function (e) {\r\n          e.preventDefault();\r\n          const parent = toggle.closest(\".button-dropdown\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          const height = dropdown.scrollHeight;\r\n\r\n          if (parent.classList.contains(\"open\")) {\r\n            parent.classList.remove(\"open\");\r\n            dropdown.style.maxHeight = null;\r\n          } else {\r\n            closeAllDropdowns();\r\n            dropdown.style.maxHeight = height + \"px\";\r\n            parent.classList.add(\"open\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function closeAllDropdowns() {\r\n      document.querySelectorAll(\".button-dropdown\").forEach(item => {\r\n        item.classList.remove(\"open\");\r\n        const menu = item.querySelector(\".dropdown-menu\");\r\n        if (menu) menu.style.maxHeight = null;\r\n      });\r\n    }\r\n  }\r\n\r\n  // Grids\r\n  const grids = document.querySelectorAll('.category__grid');\r\n  const cards = document.querySelector('.category__cards');\r\n  grids.forEach(grid => {\r\n    grid.addEventListener('click', () => {\r\n      grids.forEach(g => g.classList.remove('active'));\r\n      grid.classList.add('active');\r\n      const gridType = grid.dataset.grid;\r\n      cards.classList.remove('grid-1', 'grid-2', 'grid-3');\r\n      cards.classList.add(`grid-${gridType}`);\r\n    });\r\n  });\r\n\r\n  // Swiper\r\n  const heroSwiper = new Swiper(\".heroSwiper\", { pagination: { el: \".hero-pagination\" } });\r\n  const compareSwiper = new Swiper(\".compareSwiper\", {\r\n    slidesPerView: 2, spaceBetween: 0,\r\n    breakpoints: { 768:{slidesPerView:3}, 1025:{slidesPerView:4} }\r\n  });\r\n  const swiperNavProd = new Swiper('.js-prod-nav-slider', {\r\n    grabCursor:true, lazy:true, slidesPerView:4, spaceBetween:8,\r\n    breakpoints:{ 1025:{ direction:\"vertical\", slidesPerView:6 } }\r\n  });\r\n  const swiperProd = new Swiper('.js-prod-slider', {\r\n    grabCursor:true, lazy:true, spaceBetween:8,\r\n    navigation:{ nextEl:\".prod-button-next\", prevEl:\".prod-button-prev\" },\r\n    thumbs:{ swiper: swiperNavProd }\r\n  });\r\n\r\n  // Accordion \r\n  const faqItems = document.querySelectorAll(\".faq__item\");\r\n  faqItems.forEach((el) => {\r\n    el.addEventListener(\"click\", function () {\r\n      this.classList.toggle(\"active\");\r\n      let accBody = this.querySelector(\".faq__content\");\r\n      if (accBody.style.maxHeight) {\r\n        accBody.style.maxHeight = null;\r\n      } else {\r\n        accBody.style.maxHeight = accBody.scrollHeight + \"px\";\r\n      }\r\n      setTimeout(() => delayedRefresh.restart(true), 180);\r\n    });\r\n  });\r\n\r\n  const range = document.querySelector(\"#input-range\");\r\n  const field = document.querySelector(\".field-range\");\r\n  const label = field?.querySelector(\".label\");\r\n  const valueEl = label?.querySelector(\".value\");\r\n  range?.addEventListener(\"input\", () => {\r\n    const min = parseFloat(range.min);\r\n    const max = parseFloat(range.max);\r\n    const val = parseFloat(range.value);\r\n    valueEl.textContent = val;\r\n    field.setAttribute(\"data-value\", val);\r\n    range.setAttribute(\"value\", val);\r\n    const percent = ((val - min) / (max - min)) * 100;\r\n    label.style.left = `calc(${percent}%)`;\r\n  });\r\n\r\n  // Tabs\r\n  var tabs = new Tabby('[data-tabs]');\r\n});\r\n\n\n//# sourceURL=webpack://gulp-2022/./dist/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;